/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Model.Customer;
import Model.DataHandler;
import Model.LargeProject;
import Model.MiniProject;
import Model.Person;
import Model.Project;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Nuzla
 */
public class ProjectSheet extends javax.swing.JInternalFrame {

    List<Project> projects = DataHandler.getInstance().getAllProjects();
    /**
     * Creates new form ProjectSheet
     */
    public ProjectSheet() {
        initComponents();
        
       
        JTable table = new JTable();
        javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(table);

        table.setFillsViewportHeight(true);

        table.setModel(new AbstractTableModel() {
            public String getColumnName(int col) {
                switch (col) {
                    case 0:
                        return "Project Name";
                    case 1:
                        return "Project Type";
                    case 2:
                        return "Project Leader";
                    default:
                        throw new RuntimeException("Error!");
                }
            }

            public int getRowCount() {
                return projects.size();
            }

            public int getColumnCount() {
                return 3;
            }

            public Object getValueAt(int row, int col) {
                
                Project p = projects.get(row);
                switch (col) {
                    case 0:
                        return p.getProjectName();
                    case 1:
                        return p.getPlatform();
                    case 2:
                        if(p instanceof LargeProject)
                            return ((LargeProject)p).getLeader();
                        if(p instanceof MiniProject)
                            return ((MiniProject)p).getLeader();
                    default:
                        throw new RuntimeException("Error!");
                }
            }

            public boolean isCellEditable(int row, int col) {
                return false;
            }
        });

this.add(scrollPane,BorderLayout.CENTER);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
