/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Model.Customer;
import Model.DataHandler;
import Model.LargeProject;
import Model.MiniProject;
import Model.PermanentEmp;
import Model.Person;
import Model.Project;
import Model.ProjectLeader;
import Model.TempEmp;
import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Nuzla
 */
public class MenuOptions extends javax.swing.JFrame {

    /**
     * Creates new form MenuOptions
     */
    public MenuOptions() {
        initComponents();
        Dimension screenSize = getToolkit().getScreenSize(); this.setBounds(0, 0, screenSize.width, screenSize.height - 50);
        this.setContentPane(jDesktopPane1);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        Menu = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        menuBar3 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu5 = new java.awt.Menu();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        Report = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileOptionLoad = new javax.swing.JMenu();
        menuFileOptionLoadPerson = new javax.swing.JMenuItem();
        menuFileOptionLoadProject = new javax.swing.JMenuItem();
        menuFileOptionSave = new javax.swing.JMenu();
        menuFileOptionSavePerson = new javax.swing.JMenuItem();
        menuFileOptionSaveProject = new javax.swing.JMenuItem();
        menuFileOptionExit = new javax.swing.JMenuItem();
        menuAdd = new javax.swing.JMenu();
        menuAddOptionEmployee = new javax.swing.JMenu();
        menuAddOptionEmployeeTempory = new javax.swing.JMenuItem();
        menuAddOptionEmployeePermanent = new javax.swing.JMenuItem();
        menuAddOptionProject = new javax.swing.JMenu();
        menuAddOptionProjectMini = new javax.swing.JMenuItem();
        menuAddOptionProjectLarge = new javax.swing.JMenuItem();
        menuAddOptionCustomer = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuEditOptionEmployee = new javax.swing.JMenuItem();
        menuEditOptionCustomer = new javax.swing.JMenuItem();
        menuEditOptionProject = new javax.swing.JMenuItem();
        menuReport = new javax.swing.JMenu();
        menuReportOptionSalarySheet = new javax.swing.JMenuItem();
        menuReportOptionCustomerReport = new javax.swing.JMenuItem();
        menuReportOptionProjectSheet = new javax.swing.JMenuItem();
        menuAbout = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        Menu.setLabel("File");
        menuBar2.add(Menu);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        menu3.setLabel("File");
        menuBar3.add(menu3);

        menu5.setLabel("Edit");
        menuBar3.add(menu5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(810, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 255));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(600, 600));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(543, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(151, 151, 151))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addContainerGap(627, Short.MAX_VALUE))
        );

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 700));

        Report.setBackground(new java.awt.Color(255, 255, 204));
        Report.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        menuFile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        menuFile.setText("File");
        menuFile.setMaximumSize(new java.awt.Dimension(40, 32767));
        menuFile.setPreferredSize(new java.awt.Dimension(40, 22));

        menuFileOptionLoad.setText("Load");

        menuFileOptionLoadPerson.setText("Person");
        menuFileOptionLoadPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileOptionLoadPersonActionPerformed(evt);
            }
        });
        menuFileOptionLoad.add(menuFileOptionLoadPerson);

        menuFileOptionLoadProject.setText("Project");
        menuFileOptionLoadProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileOptionLoadProjectActionPerformed(evt);
            }
        });
        menuFileOptionLoad.add(menuFileOptionLoadProject);

        menuFile.add(menuFileOptionLoad);

        menuFileOptionSave.setText("Save");

        menuFileOptionSavePerson.setText("Pesron");
        menuFileOptionSavePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileOptionSavePersonActionPerformed(evt);
            }
        });
        menuFileOptionSave.add(menuFileOptionSavePerson);

        menuFileOptionSaveProject.setText("Project");
        menuFileOptionSaveProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileOptionSaveProjectActionPerformed(evt);
            }
        });
        menuFileOptionSave.add(menuFileOptionSaveProject);

        menuFile.add(menuFileOptionSave);

        menuFileOptionExit.setText("Exit");
        menuFile.add(menuFileOptionExit);

        Report.add(menuFile);

        menuAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        menuAdd.setText("Add ");
        menuAdd.setPreferredSize(new java.awt.Dimension(40, 22));

        menuAddOptionEmployee.setText("Employee");

        menuAddOptionEmployeeTempory.setText("Temporary");
        menuAddOptionEmployeeTempory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddOptionEmployeeTemporyActionPerformed(evt);
            }
        });
        menuAddOptionEmployee.add(menuAddOptionEmployeeTempory);

        menuAddOptionEmployeePermanent.setText("Permanent");
        menuAddOptionEmployeePermanent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddOptionEmployeePermanentActionPerformed(evt);
            }
        });
        menuAddOptionEmployee.add(menuAddOptionEmployeePermanent);

        menuAdd.add(menuAddOptionEmployee);

        menuAddOptionProject.setText("Project");

        menuAddOptionProjectMini.setText("Mini");
        menuAddOptionProjectMini.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddOptionProjectMiniActionPerformed(evt);
            }
        });
        menuAddOptionProject.add(menuAddOptionProjectMini);

        menuAddOptionProjectLarge.setText("Large");
        menuAddOptionProjectLarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddOptionProjectLargeActionPerformed(evt);
            }
        });
        menuAddOptionProject.add(menuAddOptionProjectLarge);

        menuAdd.add(menuAddOptionProject);

        menuAddOptionCustomer.setText("Customer");
        menuAddOptionCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddOptionCustomerActionPerformed(evt);
            }
        });
        menuAdd.add(menuAddOptionCustomer);

        Report.add(menuAdd);

        menuEdit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        menuEdit.setText("Edit");
        menuEdit.setPreferredSize(new java.awt.Dimension(40, 22));

        menuEditOptionEmployee.setText("Employee");
        menuEditOptionEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditOptionEmployeeActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditOptionEmployee);

        menuEditOptionCustomer.setText("Customer");
        menuEditOptionCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditOptionCustomerActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditOptionCustomer);

        menuEditOptionProject.setText("Project");
        menuEditOptionProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditOptionProjectActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditOptionProject);

        Report.add(menuEdit);

        menuReport.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        menuReport.setText("Report");
        menuReport.setPreferredSize(new java.awt.Dimension(50, 22));

        menuReportOptionSalarySheet.setText("Salary Sheet");
        menuReportOptionSalarySheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReportOptionSalarySheetActionPerformed(evt);
            }
        });
        menuReport.add(menuReportOptionSalarySheet);

        menuReportOptionCustomerReport.setText("Customer Report");
        menuReportOptionCustomerReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReportOptionCustomerReportActionPerformed(evt);
            }
        });
        menuReport.add(menuReportOptionCustomerReport);

        menuReportOptionProjectSheet.setText("Project Sheet");
        menuReportOptionProjectSheet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReportOptionProjectSheetActionPerformed(evt);
            }
        });
        menuReport.add(menuReportOptionProjectSheet);

        Report.add(menuReport);

        menuAbout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        menuAbout.setText("About");
        menuAbout.setPreferredSize(new java.awt.Dimension(50, 22));
        menuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutActionPerformed(evt);
            }
        });

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAbout.add(jMenuItem1);

        Report.add(menuAbout);

        setJMenuBar(Report);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAddOptionEmployeeTemporyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddOptionEmployeeTemporyActionPerformed
        FrameTemporaryEmployee te  = new  FrameTemporaryEmployee();
        jDesktopPane1.add(te);
        te.setVisible(true);
        System.out.println("test");
    }//GEN-LAST:event_menuAddOptionEmployeeTemporyActionPerformed

    private void menuAddOptionEmployeePermanentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddOptionEmployeePermanentActionPerformed
        FramePermanentEmployee pe  = new  FramePermanentEmployee();
        jDesktopPane1.add(pe);
        pe.setVisible(true);
    }//GEN-LAST:event_menuAddOptionEmployeePermanentActionPerformed

    private void menuAddOptionProjectMiniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddOptionProjectMiniActionPerformed
        FrameMiniProject mp  = new FrameMiniProject();
        jDesktopPane1.add(mp);
        mp.setVisible(true);
    }//GEN-LAST:event_menuAddOptionProjectMiniActionPerformed

    private void menuAddOptionProjectLargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddOptionProjectLargeActionPerformed
        FrameLargeProject lp  = new FrameLargeProject();
        jDesktopPane1.add(lp);
        lp.setVisible(true);
    }//GEN-LAST:event_menuAddOptionProjectLargeActionPerformed

    private void menuAddOptionCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddOptionCustomerActionPerformed
        FrameCustomer c  = new FrameCustomer();
        jDesktopPane1.add(c);
        c.setVisible(true);
    }//GEN-LAST:event_menuAddOptionCustomerActionPerformed

    private JFileChooser getFileChooser(){
    JFileChooser chooser = new JFileChooser();
       FileFilter temp = new FileNameExtensionFilter("txt files", "txt");
      
      chooser.setAcceptAllFileFilterUsed(false);
      chooser.setFileFilter(temp);
      return chooser;
    }
    
    private void menuFileOptionLoadPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileOptionLoadPersonActionPerformed
     JFileChooser open= getFileChooser();

if(open.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            try {
                DataHandler.getInstance().loadPerson(open.getSelectedFile());
            } catch (FileNotFoundException ex) {
               JOptionPane.showMessageDialog(this, "File not found!", "Error", JOptionPane.WARNING_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "File was found but did not contain any data!", "Error", JOptionPane.WARNING_MESSAGE);
            }catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "File cannot be opened!", "Error", JOptionPane.WARNING_MESSAGE);
            } 
}
    }//GEN-LAST:event_menuFileOptionLoadPersonActionPerformed

    private void menuFileOptionLoadProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileOptionLoadProjectActionPerformed
JFileChooser open= getFileChooser();

if(open.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            try {
                DataHandler.getInstance().loadProject(open.getSelectedFile());
            } catch (FileNotFoundException ex) {
               JOptionPane.showMessageDialog(this, "File not found!", "Error", JOptionPane.WARNING_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "File was found but did not contain any data!", "Error", JOptionPane.WARNING_MESSAGE);
            }catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "File cannot be opened!", "Error", JOptionPane.WARNING_MESSAGE);
            } 
}        // TODO add your handling code here:
    }//GEN-LAST:event_menuFileOptionLoadProjectActionPerformed

    private void menuFileOptionSavePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileOptionSavePersonActionPerformed
        JFileChooser open= getFileChooser();

if(open.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
        try {
            DataHandler.getInstance().savePerson(open.getSelectedFile());
        } catch (IOException ex) {
            ex.printStackTrace();
             JOptionPane.showMessageDialog(this, "File cannot be opened!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_menuFileOptionSavePersonActionPerformed

    private void menuFileOptionSaveProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileOptionSaveProjectActionPerformed
JFileChooser open= getFileChooser();

if(open.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
        try {
            DataHandler.getInstance().saveProject(open.getSelectedFile());
        } catch (IOException ex) {
             JOptionPane.showMessageDialog(this, "File cannot be opened!", "Error", JOptionPane.WARNING_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_menuFileOptionSaveProjectActionPerformed

    private void menuReportOptionCustomerReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReportOptionCustomerReportActionPerformed
CustomerReport report = new CustomerReport();
report.setVisible(true);
jDesktopPane1.add(report);
        // TODO add your handling code here:
    }//GEN-LAST:event_menuReportOptionCustomerReportActionPerformed

    private void menuReportOptionProjectSheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReportOptionProjectSheetActionPerformed
ProjectSheet proj = new ProjectSheet();
proj.setVisible(true);
jDesktopPane1.add(proj);// TODO add your handling code here:
    }//GEN-LAST:event_menuReportOptionProjectSheetActionPerformed

    private void menuReportOptionSalarySheetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReportOptionSalarySheetActionPerformed
SalarySheet sheet = new SalarySheet();
sheet.setVisible(true);
jDesktopPane1.add(sheet);// TODO add your handling code here:
    }//GEN-LAST:event_menuReportOptionSalarySheetActionPerformed

    private void menuEditOptionProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditOptionProjectActionPerformed

        String id = JOptionPane.showInputDialog(this, "Enter Project ID");
        JInternalFrame frame = null;
        try{
        Project project = DataHandler.getInstance().getProjectById(id);
        if(project instanceof LargeProject){
            frame = new FrameLargeProject();
            ((FrameLargeProject)frame).showLargeProject((LargeProject)project);}
           else
        {
             frame =new FrameMiniProject();
             ((FrameMiniProject)frame).showMiniProject((MiniProject)project);}
        
        frame.setVisible(true);
        jDesktopPane1.add(frame);
        
        }catch(IndexOutOfBoundsException i){
        JOptionPane.showMessageDialog(this, "Invalid Project ID", "Invalid ID",JOptionPane.WARNING_MESSAGE);
        }
        
        
    }//GEN-LAST:event_menuEditOptionProjectActionPerformed

    private void menuEditOptionCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditOptionCustomerActionPerformed
 
               showPerson();
    }//GEN-LAST:event_menuEditOptionCustomerActionPerformed

    private void menuEditOptionEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditOptionEmployeeActionPerformed
showPerson();        // TODO add your handling code here:
    }//GEN-LAST:event_menuEditOptionEmployeeActionPerformed

    private void menuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutActionPerformed
        JInternalFrame abt = new AboutWindow();
        abt.setVisible(true);
        jDesktopPane1.add(abt);
    }//GEN-LAST:event_menuAboutActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JInternalFrame abt = new AboutWindow();
 abt.setVisible(true);
 jDesktopPane1.add(abt);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
private void showPerson(){
String id = JOptionPane.showInputDialog(this, "Enter NIC");
        JInternalFrame frame = null;
        try{
        Person p = DataHandler.getInstance().getPersonByNIC(id);
        if(p instanceof Customer){
            frame = new FrameCustomer();
            ((FrameCustomer)frame).showCustomer((Customer)p);}
        else if(p instanceof TempEmp){
            frame = new FrameTemporaryEmployee();
        ((FrameTemporaryEmployee)frame).showTemporaryEmployee((TempEmp)p);}
        else if(p instanceof PermanentEmp){
            frame = new FramePermanentEmployee();
        ((FramePermanentEmployee)frame).showPermenantEmployee((PermanentEmp)p);}
        
        
        frame.setVisible(true);
        jDesktopPane1.add(frame);
        
        }catch(IndexOutOfBoundsException i){
        JOptionPane.showMessageDialog(this, "Invalid Project ID", "Invalid ID",JOptionPane.WARNING_MESSAGE);
        }
        
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuOptions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuOptions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Menu Menu;
    private javax.swing.JMenuBar Report;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.Menu menu5;
    private javax.swing.JMenu menuAbout;
    private javax.swing.JMenu menuAdd;
    private javax.swing.JMenuItem menuAddOptionCustomer;
    private javax.swing.JMenu menuAddOptionEmployee;
    private javax.swing.JMenuItem menuAddOptionEmployeePermanent;
    private javax.swing.JMenuItem menuAddOptionEmployeeTempory;
    private javax.swing.JMenu menuAddOptionProject;
    private javax.swing.JMenuItem menuAddOptionProjectLarge;
    private javax.swing.JMenuItem menuAddOptionProjectMini;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    private java.awt.MenuBar menuBar3;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuItem menuEditOptionCustomer;
    private javax.swing.JMenuItem menuEditOptionEmployee;
    private javax.swing.JMenuItem menuEditOptionProject;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileOptionExit;
    private javax.swing.JMenu menuFileOptionLoad;
    private javax.swing.JMenuItem menuFileOptionLoadPerson;
    private javax.swing.JMenuItem menuFileOptionLoadProject;
    private javax.swing.JMenu menuFileOptionSave;
    private javax.swing.JMenuItem menuFileOptionSavePerson;
    private javax.swing.JMenuItem menuFileOptionSaveProject;
    private javax.swing.JMenu menuReport;
    private javax.swing.JMenuItem menuReportOptionCustomerReport;
    private javax.swing.JMenuItem menuReportOptionProjectSheet;
    private javax.swing.JMenuItem menuReportOptionSalarySheet;
    // End of variables declaration//GEN-END:variables
}
